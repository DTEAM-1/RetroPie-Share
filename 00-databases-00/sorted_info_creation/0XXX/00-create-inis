echo "Make sure you are running a 64 bit version of mame !"


#remove old good.ini and create a recent one (with emulation="good" check)
rm good.ini
/opt/retropie/emulators/mame/mame -listdevices|grep ^Driver|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]] && echo $driver;done > good.ini

#remove old 90ยบ.ini and create a recent one (no emulation="good" check)
#no check on good or bad rom because we want the info added for both good and preliminary roms
#we can sort on good or preliminary later
rm 90ยบ.ini
/opt/retropie/emulators/mame/mame -listdevices|grep ^Driver|cut -d " " -f2|while read driver; do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver) == *rotate=\"90\"* ]]||[[ $(/opt/retropie/emulators/mame/mame -listxml $driver) == *rotate=\"270\"* ]]&&echo $driver;done > 90ยบ.ini

#remove old gameandwatch.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
rm gameandwatch.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/gnw\_/||/\(Bassmate/'|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]] && echo $driver;done > gameandwatch.ini

#remove old jakks.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
rm jakks.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/\jak\_/'|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]] && echo $driver;done > jakks.ini
#append manual tested preliminary drivers
preliminarydrivers=()
preliminarydrivers=\
'
jak_sdoo
'
for preliminarydriver in $preliminarydrivers
do
[[ -n $(/opt/retropie/emulators/mame/mame -listdevices $preliminarydriver) ]]&&echo $preliminarydriver >> jakks.ini
done
#sort the file
sort -o jakks.ini jakks.ini

#remove old konamih.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
rm konamih.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/\(Konami\)/||/\(handheld\)/'|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]] && echo $driver;done > konamih.ini

#remove old lightgun.ini and create a recent one (no emulation="good" check)
#no check on good or bad rom because we want the info added for both good and preliminary roms
#we can sort on good or preliminary later
#even though lightgun information is available, not all systems can make use of it !
#for more information, have a look over here :
#https://retropie.org.uk/forum/topic/32900/how-to-run-atari-7800-on-lr-mess
rm lightgun.ini
/opt/retropie/emulators/mame/mame -listdevices|grep ^Driver|cut -d " " -f2|while read driver; do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver) == *lightgun* ]]&&echo $driver;done > lightgun.ini

#remove old neogeo.ini and create a recent one (no emulation="good" check)
#neogeo can be extracted from hash !
#no check on good or bad rom because we want the info added for both good and preliminary roms
#we can sort on good or preliminary later
cat /opt/retropie/emulators/mame/hash/neogeo.xml|grep "software name="|cut -d\" -f2|sort > neogeo.ini

#remove old nintendovs.ini and create a recent one (no emulation="good" check)
#no check on good or bad rom because we want the info added for both good and preliminary roms
#we can sort on good or preliminary later
rm nintendovs.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/^Driver/&&/\(Vs. /'|cut -d " " -f2 > nintendovs.ini

#remove old tigerh.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
rm tigerh.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/^D/&&/\(Tiger/'|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]]&&[[ -n $(/opt/retropie/emulators/mame/mame -listxml $driver| grep sourcefile=\"handheld) ]] && echo $driver;done > tigerh.ini

#remove old tigerrz.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
rm tigerrz.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/\(R-Zone/'|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]] && echo $driver;done > tigerrz.ini

#run this after creating a tigerh.ini !
#remove old classich.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
#here is an array with all the handheld manufacturers which were in the earlier classich.ini
#the information is extracted using the -listxml option with mame and grabbing the correct manufaturer line
#the special charachters and spaces are removed to prevent problems not able to store them correctly in a "cel"
#the checking meganism does the same thing with the special charachters and spaces so they can be compared correctly
rm classich.ini
manufacturers=()
manufacturers=\
'
'Bambino'
'Bandai'
'Coleco'
'ColecoKonami'
'Conic'
'Entex'
'Epoch'
'Gakken'
'GakkenKonami'
'IdealToyCorporation'
'MattelElectronics'
'NelsoniclicensedfromNintendo'
'ParkerBrothers'
'TigerElectronics'
'Tomy'
'Tronica'
'U.S.Games'
'VTech'
'
/opt/retropie/emulators/mame/mame -listdevices|awk "/Driver/"|cut -d " " -f2|while read driver; do  readmanufacturer="$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/manufacturer>/"|sed 's/^[ \t]*//;s/.manufacturer//g;s/>//g;s/<//g;s/ //g;s/'\('//g;s/'\)'//g;s/\///g')"; handheldinfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/sourcefile=\"handheld/"); emulationinfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/emulation=\"good/"); for manufacturer in $manufacturers; do [[ $manufacturer == $readmanufacturer ]]&&[[ -n $handheldinfo ]]&&[[ -n $emulationinfo ]]&&echo $driver; done; done > classich.ini
#append mchess from mattel and do the checks on mattel (not handheld)
/opt/retropie/emulators/mame/mame -listdevices mchess|awk "/Driver/"|cut -d " " -f2|while read driver; do  readmanufacturer="$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/manufacturer>/"|sed 's/^[ \t]*//;s/.manufacturer//g;s/>//g;s/<//g;s/ //g;s/'\('//g;s/'\)'//g;s/\///g')"; handheldinfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/sourcefile=\"mattel/"); emulationinfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/emulation=\"good/"); for manufacturer in $manufacturers; do [[ $manufacturer == $readmanufacturer ]]&&[[ -n $handheldinfo ]]&&[[ -n $emulationinfo ]]&&echo $driver; done; done >> classich.ini
#make sure the tigerh.ini is created earlier then
#remove tigerh games from the list with this command
#N does append the next line in the pattern space so whole exact matches are removed including the newline
#append old driver tbaskb (not in mame database anymore !)
echo tbaskb >> classich.ini
cat tigerh.ini |while read driver;do sed -i "N;s/$driver\\n//g" classich.ini ; done
sort -o classich.ini classich.ini
